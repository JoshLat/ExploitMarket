<?php
include 'Utilities.php';

class Registration extends Core {
	public function RegisterUser() {
		$this->POSTEDuser = filter_input(INPUT_POST, "username");
		$this->POSTEDpass = filter_input(INPUT_POST, "password");
		//$this->POSTEDuser = "abc";
		//$this->POSTEDpass = "123";
		if ($this->CheckAuthenticity($this->POSTEDuser, $this->POSTEDpass, 1) == false) {
			echo "username not taken!";
			$this->RegisterUserAccount($this->POSTEDuser, $this->POSTEDpass);
		} else {
			return false;
		}
	}
}


class CookieManager extends Core {
	public function CheckCookie() {
		$curCookie = filter_input(INPUT_COOKIE, "EMAcct");
		if ($this->CheckForCookie($curCookie, 1) == $curCookie) { //check cookie
			return $this->CheckForCookie($curCookie, 2); //return cookie
		} else {
			return false;
		}
	}

	public function RemoveCookie() {
		setcookie("EMAcct", NULL, time() - (time() + 1));
		return;
	}
}

class Authentication extends Core {
	public function AuthenticateUser() {
		$this->POSTEDuser = filter_input(INPUT_POST, "username");
		$this->POSTEDpass = filter_input(INPUT_POST, "password");
		//$this->POSTEDuser = "brazzers";
		//$this->POSTEDpass = "3098";
		$cookie = $this->CreateCookie($this->POSTEDuser, $this->POSTEDpass);
		if ($this->CheckAuthenticity($this->POSTEDuser, $this->POSTEDpass, 2) != false) { //verify user
			if ($this->RegisterCookie($this->POSTEDuser, $this->POSTEDpass, $cookie) != false) { //register cookie
				setcookie("EMAcct", $cookie, time() + 86400, '/'); //set the cookie
			} else {
				echo "unable to Register cookie!";
				return false;
			}
		} else {
			echo "Unable to authenticate!";
			return false;
		}
	}

	public function TestCookie() {
		echo $this->CreateCookie(filter_input(INPUT_GET, "a"), filter_input(INPUT_GET, "b"));
	}
}

//$lel = new Authentication();
//$lel->TestCookie();


?>